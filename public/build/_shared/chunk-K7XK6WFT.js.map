{
  "version": 3,
  "sources": ["../../../app/presentation/components/Input/InputSearch.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/presentation/components/Input/InputSearch.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/presentation/components/Input/InputSearch.tsx\");\n  import.meta.hot.lastModified = \"1704535115114.9338\";\n}\n// REMIX HMR END\n\nimport { CloseButton, Input } from \"@mantine/core\";\nimport { Form, Link, useSearchParams } from \"@remix-run/react\";\nimport { IconSearch } from \"@tabler/icons-react\";\nexport default function InputSearch(props) {\n  _s();\n  const [searchParams] = useSearchParams();\n  const querySearch = searchParams.get(\"search\");\n  return <Form action=\"?page=1&\" method=\"get\" style={{\n    width: \"25%\"\n  }}>\n\t\t\t<Input {...props} defaultValue={querySearch || \"\"} type=\"text\" placeholder=\"cari\" rightSectionPointerEvents=\"all\" leftSectionPointerEvents=\"all\" name=\"search\" leftSection={<IconSearch size={16} />} rightSection={<Link to=\".\">\n\t\t\t\t\t\t<CloseButton aria-label=\"Clear input\" style={{\n        display: querySearch ? undefined : \"none\"\n      }} />\n\t\t\t\t\t</Link>} />\n\t\t</Form>;\n}\n_s(InputSearch, \"HWxNQEGJGSlsPJ3ubBB3081mtng=\", false, function () {\n  return [useSearchParams];\n});\n_c = InputSearch;\nvar _c;\n$RefreshReg$(_c, \"InputSearch\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AA+B+K;AA9B/K,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,wDAA0D,EAAE;AAAA,EACrG;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAmD;AACnD,cAAY,IAAI,eAAe;AACjC;AAMe,SAAR,YAA6B,OAAO;AACzC,KAAG;AACH,QAAM,CAAC,YAAY,IAAI,gBAAgB;AACvC,QAAM,cAAc,aAAa,IAAI,QAAQ;AAC7C,SAAO,mDAAC,QAAK,QAAO,YAAW,QAAO,OAAM,OAAO;AAAA,IACjD,OAAO;AAAA,EACT,GACC,6DAAC,SAAO,GAAG,OAAO,cAAc,eAAe,IAAI,MAAK,QAAO,aAAY,QAAO,2BAA0B,OAAM,0BAAyB,OAAM,MAAK,UAAS,aAAa,mDAAC,cAAW,MAAM,MAAlB;AAAA;AAAA;AAAA;AAAA,SAAsB,GAAI,cAAc,mDAAC,QAAK,IAAG,KAC1N,6DAAC,eAAY,cAAW,eAAc,OAAO;AAAA,IAC3C,SAAS,cAAc,SAAY;AAAA,EACrC,KAFA;AAAA;AAAA;AAAA;AAAA,SAEG,KAH8M;AAAA;AAAA;AAAA;AAAA,SAIlN,KAJF;AAAA;AAAA;AAAA;AAAA,SAIW,KAPL;AAAA;AAAA;AAAA;AAAA,SAQP;AACF;AACA,GAAG,aAAa,gCAAgC,OAAO,WAAY;AACjE,SAAO,CAAC,eAAe;AACzB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,aAAa;AAE9B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}

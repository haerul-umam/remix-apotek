{
  "version": 3,
  "sources": ["../../../app/presentation/components/Table/Table.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/presentation/components/Table/Table.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/presentation/components/Table/Table.tsx\");\n  import.meta.hot.lastModified = \"1705325834688.3\";\n}\n// REMIX HMR END\n\nimport React from \"react\";\nimport { Alert, Box, LoadingOverlay, Pagination, Table } from \"@mantine/core\";\nimport { IconInfoCircle } from \"@tabler/icons-react\";\nimport { useNavigate, useNavigation, useSearchParams } from \"@remix-run/react\";\nimport { useTypedLoaderData } from \"remix-typedjson\";\nexport default function CustomTable({\n  header,\n  rows,\n  children,\n  totalPagination,\n  renderActionHeader,\n  ...other\n}) {\n  _s();\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const {\n    state\n  } = useNavigation();\n  const loader = useTypedLoaderData();\n  const isLoading = state === \"loading\";\n  const queryPage = +(searchParams.get(\"page\") || 0);\n  const page = queryPage > 0 ? queryPage : 1;\n  const movePagination = value => navigate(`?page=${value}`);\n  const Rows = rows ? rows.map(element => {\n    const td = Object.values(element).map((data, idx) => <Table.Td key={idx}>{data}</Table.Td>);\n    return <Table.Tr key={JSON.stringify(element)}>{td}</Table.Tr>;\n  }) : null;\n  const Header = header.map(head => <Table.Th key={head}>{head}</Table.Th>);\n  if (!(Array.isArray(children) && children.length || Rows) && !totalPagination && loader.status < 300) {\n    return <Alert variant=\"outline\" color=\"blue\" title=\"Data Tabel\" icon={<IconInfoCircle />}>\n\t\t\t\tData tidak ditemukan, silahkan tambahkan atau filter data.\n\t\t\t</Alert>;\n  }\n  return <Box pos=\"relative\" {...other}>\n\t\t\t<LoadingOverlay visible={isLoading} zIndex={100} overlayProps={{\n      radius: \"sm\",\n      blur: 2\n    }} />\n\t\t\t{loader.status > 300 ? <Alert variant=\"light\" color=\"blue\" title=\"Data obat\" icon={<IconInfoCircle />}>\n\t\t\t\t\t{loader?.message || \"Gagal mendapatkan data\"}\n\t\t\t\t</Alert> : <>\n\t\t\t\t\t<Table withTableBorder>\n\t\t\t\t\t\t<Table.Thead bg=\"cyan.6\" c=\"#ffff\">\n\t\t\t\t\t\t\t<Table.Tr>\n\t\t\t\t\t\t\t\t{Header}\n\t\t\t\t\t\t\t\t{renderActionHeader ? <Table.Th style={{\n              textAlign: \"center\"\n            }}>Aksi</Table.Th> : null}\n\t\t\t\t\t\t\t</Table.Tr>\n\t\t\t\t\t\t</Table.Thead>\n\t\t\t\t\t\t<Table.Tbody>{children || Rows}</Table.Tbody>\n\t\t\t\t\t</Table>\n\t\t\t\t\t<Pagination value={+page} onChange={movePagination} total={totalPagination} size=\"sm\" mt=\"sm\" style={{\n        justifyContent: \"flex-end\",\n        display: \"flex\"\n      }} />\n\t\t\t\t</>}\n\t\t</Box>;\n}\n_s(CustomTable, \"djp+0dpbyAzK8TBLASoywVQ6J7k=\", false, function () {\n  return [useSearchParams, useNavigate, useNavigation, useTypedLoaderData];\n});\n_c = CustomTable;\nvar _c;\n$RefreshReg$(_c, \"CustomTable\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}

{
  "version": 3,
  "sources": ["../../../app/presentation/components/Form/PenggunaForm.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/presentation/components/Form/PenggunaForm.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/presentation/components/Form/PenggunaForm.tsx\");\n  import.meta.hot.lastModified = \"1705421999922.0103\";\n}\n// REMIX HMR END\n\nimport { Button, Group, PasswordInput, Select, SimpleGrid, TextInput, Textarea } from \"@mantine/core\";\nimport { useForm, isNotEmpty, matches, isEmail, hasLength } from \"@mantine/form\";\nimport { notifications } from \"@mantine/notifications\";\nimport { useNavigate, useNavigation, useSubmit } from \"@remix-run/react\";\nimport { useEffect } from \"react\";\nimport { useTypedActionData, useTypedLoaderData } from \"remix-typedjson\";\nimport CustomModal from \"~/presentation/components/Modal/Modal\";\nimport { DatePickerInput } from \"@mantine/dates\";\nexport default function PenggunaForm() {\n  _s();\n  const navigate = useNavigate();\n  const navigation = useNavigation();\n  const actionData = useTypedActionData();\n  const loaderData = useTypedLoaderData();\n  const submit = useSubmit();\n  const isSubmitting = navigation.state !== \"idle\";\n  const {\n    id = \"\",\n    address = \"\",\n    birthday = null,\n    email = \"\",\n    fullName = \"\",\n    hp = \"\",\n    level = \"ADMIN\",\n    status = \"1\"\n  } = loaderData?.data || {};\n  const initialValues = {\n    password: \"\",\n    address,\n    birthday,\n    email,\n    fullName,\n    level,\n    status: status.toString(),\n    hp\n  };\n  const form = useForm({\n    initialValues,\n    validate: {\n      ...(id ? null : {\n        password: hasLength({\n          min: 6\n        }, \"Minimal 6 karakter\")\n      }),\n      birthday: isNotEmpty(\"Tanggal lahir tidak boleh kosong\"),\n      email: isEmail(\"Email tidak valid\"),\n      fullName: isNotEmpty(\"Nama tidak boleh kosong\"),\n      level: isNotEmpty(\"Level tidak boleh kosong\"),\n      status: isNotEmpty(\"Status tidak boleh kosong\"),\n      hp: matches(/^([+]?[\\s0-9]+)?(\\d{3}|[(]?[0-9]+[)])?([-]?[\\s]?[0-9])+$/, \"Hp tidak valid\")\n    }\n  });\n  const onClose = () => {\n    navigate(\"..\");\n  };\n  const onSubmit = values => {\n    if (values?.password?.trim()?.length === 0) delete values.password;\n    const method = id ? \"patch\" : \"post\";\n    const action = id ? \".\" : \"../tambah\";\n    submit(values, {\n      method,\n      action\n    });\n  };\n  useEffect(() => {\n    if (!actionData) return;\n    if (actionData?.message) {\n      const failed = actionData?.status > 300;\n      notifications.show({\n        title: failed ? \"Gagal\" : \"Sukses\",\n        message: actionData.message,\n        autoClose: 5000,\n        color: failed ? \"red\" : \"blue\"\n      });\n    }\n  }, [actionData]);\n  return <>\n\t\t\t<CustomModal size=\"lg\" onClose={onClose} title=\"Pengguna\">\n\t\t\t\t<form onSubmit={form.onSubmit(onSubmit)}>\n\t\t\t\t\t<SimpleGrid cols={2}>\n\t\t\t\t\t\t<TextInput data-autofocus label=\"Nama lengkap\" withAsterisk {...form.getInputProps(\"fullName\")} />\n\t\t\t\t\t\t<DatePickerInput label=\"Tanggal lahir\" withAsterisk {...form.getInputProps(\"birthday\")} />\n\t\t\t\t\t\t<TextInput label=\"HP\" withAsterisk {...form.getInputProps(\"hp\")} />\n\t\t\t\t\t\t<Select label=\"Level\" data={[{\n            label: \"ADMIN\",\n            value: \"ADMIN\"\n          }, {\n            label: \"KEPALA GUDANG\",\n            value: \"HEAD_WH\"\n          }]} {...form.getInputProps(\"level\")} withAsterisk />\n\t\t\t\t\t\t<Select label=\"Status\" data={[{\n            label: \"AKTIF\",\n            value: \"1\"\n          }, {\n            label: \"NON AKTIF\",\n            value: \"0\"\n          }]} {...form.getInputProps(\"status\")} withAsterisk />\n\t\t\t\t\t\t<TextInput label=\"Email\" withAsterisk {...form.getInputProps(\"email\")} />\n\t\t\t\t\t\t<PasswordInput withAsterisk={id ? false : true} {...form.getInputProps(\"password\")} label=\"Password\" description={id ? \"kosongkan jika tidak ingin ubah password\" : \"\"} />\n\t\t\t\t\t</SimpleGrid>\n\t\t\t\t\t<Textarea label=\"Alamat\" {...form.getInputProps(\"address\")} mt=\"md\" />\n\t\t\t\t\t<Group justify=\"flex-end\" mt=\"md\">\n\t\t\t\t\t\t<Button onClick={onClose} variant=\"transparent\" color=\"red\">\n\t\t\t\t\t\t\tTutup\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"submit\" disabled={isSubmitting} loading={isSubmitting}>\n\t\t\t\t\t\t\tSimpan\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Group>\n\t\t\t\t</form>\n\t\t\t</CustomModal>\n\t\t</>;\n}\n_s(PenggunaForm, \"D1XdMRoT8fdbUQsW9HNPnoXauJg=\", false, function () {\n  return [useNavigate, useNavigation, useTypedActionData, useTypedLoaderData, useSubmit, useForm];\n});\n_c = PenggunaForm;\nvar _c;\n$RefreshReg$(_c, \"PenggunaForm\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react"]
}

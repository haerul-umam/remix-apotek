{
  "version": 3,
  "sources": ["../../../app/presentation/components/Form/PembelianForm.tsx", "../../../app/routes/_app.pembelian.tambah/index.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/presentation/components/Form/PembelianForm.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/presentation/components/Form/PembelianForm.tsx\");\n  import.meta.hot.lastModified = \"1704559824862.1924\";\n}\n// REMIX HMR END\n\nimport { Button, Group, NumberInput, Stack, TextInput } from \"@mantine/core\";\nimport { DatePickerInput } from \"@mantine/dates\";\nimport { useForm, isNotEmpty, isInRange } from \"@mantine/form\";\nimport { notifications } from \"@mantine/notifications\";\nimport { useNavigate, useNavigation, useSubmit } from \"@remix-run/react\";\nimport { useEffect } from \"react\";\nimport { useTypedActionData } from \"remix-typedjson\";\nimport CustomModal from \"~/presentation/components/Modal/Modal\";\nimport SelectAsync from \"../Input/SelectAsync\";\nexport default function PembelianForm() {\n  _s();\n  const navigate = useNavigate();\n  const navigation = useNavigation();\n  const actionData = useTypedActionData();\n  const submit = useSubmit();\n  const isSubmitting = navigation.state !== \"idle\";\n  const initialValues = {\n    invoice: \"\",\n    medicineId: null,\n    supplierId: null,\n    date: null,\n    total: 0,\n    quantity: 0\n  };\n  const form = useForm({\n    initialValues,\n    validate: {\n      invoice: isNotEmpty(\"Faktur tidak boleh kosong\"),\n      medicineId: isNotEmpty(\"Obat tidak boleh kosong\"),\n      supplierId: isNotEmpty(\"Supplier tidak boleh kosong\"),\n      date: isNotEmpty(\"Tanggal tidak boleh kosong\"),\n      total: isInRange({\n        min: 1\n      }, \"Total tidak boleh kosong\"),\n      quantity: isInRange({\n        min: 1\n      }, \"Kuantitas tidak boleh kosong\")\n    }\n  });\n  const onClose = () => {\n    navigate(\"..\");\n  };\n  const onSubmit = values => {\n    // YYYY-MM-DD\n    const date = new Date(values.date).toLocaleDateString(\"en-CA\");\n    submit({\n      ...values,\n      date\n    }, {\n      method: \"post\",\n      action: \"../tambah\"\n    });\n  };\n  useEffect(() => {\n    if (!actionData) return;\n    if (actionData?.message) {\n      const failed = actionData?.status > 300;\n      notifications.show({\n        title: failed ? \"Gagal\" : \"Sukses\",\n        message: actionData.message,\n        autoClose: 5000,\n        color: failed ? \"red\" : \"blue\"\n      });\n    }\n  }, [actionData]);\n  return <>\n\t\t\t<CustomModal onClose={onClose} title=\"Satuan\">\n\t\t\t\t<form onSubmit={form.onSubmit(onSubmit)}>\n\t\t\t\t\t<Stack gap=\"sm\">\n\t\t\t\t\t\t<TextInput data-autofocus label=\"No Faktur\" withAsterisk {...form.getInputProps(\"invoice\")} />\n\t\t\t\t\t\t<DatePickerInput label=\"Tanggal\" withAsterisk {...form.getInputProps(\"date\")} />\n\t\t\t\t\t\t<SelectAsync valueKey=\"id\" labelKey=\"name\" label=\"Supplier\" isError={form.errors.supplierId} actionUrl=\"/supplier\" onChange={e => form.setValues({\n            supplierId: e.id\n          })} />\n\t\t\t\t\t\t<SelectAsync valueKey=\"id\" labelKey=\"name\" label=\"Obat\" isError={form.errors.medicineId} actionUrl=\"/obat\" onChange={e => form.setValues({\n            medicineId: e.id\n          })} />\n\t\t\t\t\t\t<NumberInput label=\"Kuantitas\" withAsterisk min={1} {...form.getInputProps(\"quantity\")} />\n\t\t\t\t\t\t<NumberInput label=\"Total\" withAsterisk {...form.getInputProps(\"total\")} min={1} />\n\t\t\t\t\t\t<Group justify=\"flex-end\">\n\t\t\t\t\t\t\t<Button onClick={onClose} variant=\"transparent\" color=\"red\">\n\t\t\t\t\t\t\t\tTutup\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button type=\"submit\" disabled={isSubmitting} loading={isSubmitting}>\n\t\t\t\t\t\t\t\tSimpan\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Group>\n\t\t\t\t\t</Stack>\n\t\t\t\t</form>\n\t\t\t</CustomModal>\n\t\t</>;\n}\n_s(PembelianForm, \"z5Mw+VurHZ8Awg8/PfwwJWDQCrY=\", false, function () {\n  return [useNavigate, useNavigation, useTypedActionData, useSubmit, useForm];\n});\n_c = PembelianForm;\nvar _c;\n$RefreshReg$(_c, \"PembelianForm\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/_app.pembelian.tambah/index.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/_app.pembelian.tambah/index.tsx\");\n  import.meta.hot.lastModified = \"1705419399405.3252\";\n}\n// REMIX HMR END\n\nimport PembelianForm from \"~/presentation/components/Form/PembelianForm\";\nimport { typedjson } from \"remix-typedjson\";\nimport { createPembelian, createPembelianDto } from \"~/services/pembelian.server\";\nimport { requireUserSession } from \"~/services/login.server\";\nexport default function TambahPembelian() {\n  return <PembelianForm />;\n}\n_c = TambahPembelian;\nexport const action = async ({\n  request\n}) => {\n  await requireUserSession(request, \"ADMIN\");\n  try {\n    const formData = await request.formData();\n    const schema = createPembelianDto.safeParse(formData);\n    if (!schema.success) {\n      return typedjson({\n        message: schema.error.errors[0].message,\n        status: 400\n      }, {\n        status: 400\n      });\n    }\n    const result = await createPembelian(schema.data);\n    return typedjson(result, {\n      status: result.status\n    });\n  } catch (error) {\n    throw error;\n  }\n};\nexport const meta = () => {\n  return [{\n    title: \"Tambah pembelian\"\n  }];\n};\nvar _c;\n$RefreshReg$(_c, \"TambahPembelian\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react", "import_jsx_dev_runtime", "_c", "_c"]
}

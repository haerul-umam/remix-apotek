{
  "version": 3,
  "sources": ["../../../app/routes/_app.laporan-pembelian/index.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/_app.laporan-pembelian/index.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/_app.laporan-pembelian/index.tsx\");\n  import.meta.hot.lastModified = \"1705419332582.4167\";\n}\n// REMIX HMR END\n\nimport z from \"zod\";\nimport CustomTable from \"~/presentation/components/Table/Table\";\nimport InputDateRange from \"~/presentation/components/Input/InputDateRange\";\nimport ButtonDownload from \"~/presentation/components/Button/ButtonDownload\";\nimport { prepareSearch } from \"~/utils/_helper.server\";\nimport { findAllPembelian } from \"~/services/pembelian.server\";\nimport { typedjson, useTypedLoaderData } from \"remix-typedjson\";\nimport { Outlet } from \"@remix-run/react\";\nimport { Group, Table } from \"@mantine/core\";\nimport { rupiah } from \"~/utils/_helper\";\nimport { useDateRangeParamsInvalid } from \"~/hooks/useDateRangeParamsCheck\";\nimport { requireUserSession } from \"~/services/login.server\";\nexport const meta = () => {\n  return [{\n    title: \"Laporan Pembelian\"\n  }];\n};\nexport default function LaporanPembelian() {\n  _s();\n  const loader = useTypedLoaderData();\n  const {\n    errorElement,\n    start,\n    end\n  } = useDateRangeParamsInvalid();\n  if (errorElement) return errorElement;\n  return <>\n\t\t\t<Outlet />\n\t\t\t<main>\n\t\t\t\t<Group>\n\t\t\t\t\t<InputDateRange my=\"sm\" />\n\t\t\t\t\t<ButtonDownload url={`/report-excel?data=pembelian&start=${start}&end=${end}`} />\n\t\t\t\t</Group>\n\t\t\t\t<CustomTable mt=\"sm\" totalPagination={loader?.data?.pagination.pageCount || 0} header={[\"No Faktur\", \"Obat\", \"Supplier\", \"Tanggal\", \"Kuantitas\", \"Total\"]}>\n\t\t\t\t\t{loader?.data?.data?.map(data => <Table.Tr key={data.id}>\n\t\t\t\t\t\t\t<Table.Td>{data.invoice}</Table.Td>\n\t\t\t\t\t\t\t<Table.Td>{data.medicineName}</Table.Td>\n\t\t\t\t\t\t\t<Table.Td>{data.supplierName}</Table.Td>\n\t\t\t\t\t\t\t<Table.Td>{data.date.toISOString().split(\"T\")[0]}</Table.Td>\n\t\t\t\t\t\t\t<Table.Td>{data.quantity}</Table.Td>\n\t\t\t\t\t\t\t<Table.Td>{rupiah(data.total)}</Table.Td>\n\t\t\t\t\t\t</Table.Tr>)}\n\t\t\t\t</CustomTable>\n\t\t\t</main>\n\t\t</>;\n}\n_s(LaporanPembelian, \"H7omMrUpVq0Uxi63I6WhFxntPFU=\", false, function () {\n  return [useTypedLoaderData, useDateRangeParamsInvalid];\n});\n_c = LaporanPembelian;\nexport const loader = async ({\n  request\n}) => {\n  await requireUserSession(request, \"HEAD_WH\");\n  const {\n    page,\n    queryString: search,\n    start,\n    end\n  } = prepareSearch(request.url);\n  const stringToDate = z.coerce.date();\n  if (!stringToDate.safeParse(start).success || !stringToDate.safeParse(end).success) {\n    return typedjson({\n      data: null,\n      message: \"Invalid date\"\n    }, {\n      status: 400\n    });\n  }\n  const now = new Date();\n  const startDate = start ? new Date(start) : now;\n  const endDate = end ? new Date(end) : now;\n  const data = await findAllPembelian({\n    page,\n    search,\n    start: startDate.toLocaleDateString(\"en-CA\"),\n    end: endDate.toLocaleDateString(\"en-CA\")\n  });\n  return typedjson(data);\n};\nvar _c;\n$RefreshReg$(_c, \"LaporanPembelian\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,oBAA8B;AAC9B,uBAAiC;AAMjC,mBAAmC;AAe1B;AA9CT,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,kDAAoD,EAAE;AAAA,EAC/F;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA6C;AAC7C,cAAY,IAAI,eAAe;AACjC;AAeO,IAAM,OAAO,MAAM;AACxB,SAAO,CAAC;AAAA,IACN,OAAO;AAAA,EACT,CAAC;AACH;AACe,SAAR,mBAAoC;AACzC,KAAG;AACH,QAAM,SAAS,mBAAmB;AAClC,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI,0BAA0B;AAC9B,MAAI;AAAc,WAAO;AACzB,SAAO,sFACN;AAAA,uDAAC,YAAD;AAAA;AAAA;AAAA;AAAA,WAAQ;AAAA,IACR,mDAAC,UACA;AAAA,yDAAC,SACA;AAAA,2DAAC,kBAAe,IAAG,QAAnB;AAAA;AAAA;AAAA;AAAA,eAAwB;AAAA,QACxB,mDAAC,kBAAe,KAAK,sCAAsC,aAAa,SAAxE;AAAA;AAAA;AAAA;AAAA,eAA+E;AAAA,WAFhF;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,MACA,mDAAC,eAAY,IAAG,MAAK,iBAAiB,QAAQ,MAAM,WAAW,aAAa,GAAG,QAAQ,CAAC,aAAa,QAAQ,YAAY,WAAW,aAAa,OAAO,GACtJ,kBAAQ,MAAM,MAAM,IAAI,UAAQ,mDAAC,MAAM,IAAN,EAChC;AAAA,2DAAC,MAAM,IAAN,EAAU,eAAK,WAAhB;AAAA;AAAA;AAAA;AAAA,eAAwB;AAAA,QACxB,mDAAC,MAAM,IAAN,EAAU,eAAK,gBAAhB;AAAA;AAAA;AAAA;AAAA,eAA6B;AAAA,QAC7B,mDAAC,MAAM,IAAN,EAAU,eAAK,gBAAhB;AAAA;AAAA;AAAA;AAAA,eAA6B;AAAA,QAC7B,mDAAC,MAAM,IAAN,EAAU,eAAK,KAAK,YAAY,EAAE,MAAM,GAAG,EAAE,CAAC,KAA/C;AAAA;AAAA;AAAA;AAAA,eAAiD;AAAA,QACjD,mDAAC,MAAM,IAAN,EAAU,eAAK,YAAhB;AAAA;AAAA;AAAA;AAAA,eAAyB;AAAA,QACzB,mDAAC,MAAM,IAAN,EAAU,iBAAO,KAAK,KAAK,KAA5B;AAAA;AAAA;AAAA;AAAA,eAA8B;AAAA,WANgB,KAAK,IAApB;AAAA;AAAA;AAAA;AAAA,aAOhC,CAAW,KARb;AAAA;AAAA;AAAA;AAAA,aASA;AAAA,SAdD;AAAA;AAAA;AAAA;AAAA,WAeA;AAAA,OAjBM;AAAA;AAAA;AAAA;AAAA,SAkBP;AACF;AACA,GAAG,kBAAkB,gCAAgC,OAAO,WAAY;AACtE,SAAO,CAAC,oBAAoB,yBAAyB;AACvD,CAAC;AACD,KAAK;AA+BL,IAAI;AACJ,aAAa,IAAI,kBAAkB;AAEnC,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}

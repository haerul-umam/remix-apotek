{
  "version": 3,
  "sources": ["../../../app/routes/_app.satuan.tambah/index.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/_app.satuan.tambah/index.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/_app.satuan.tambah/index.tsx\");\n  import.meta.hot.lastModified = \"1705419495901.1497\";\n}\n// REMIX HMR END\n\nimport SatuanForm from \"~/presentation/components/Form/SatuanForm\";\nimport { typedjson } from \"remix-typedjson\";\nimport { createSatuan, createSatuanDto } from \"~/services/satuan.server\";\nimport { requireUserSession } from \"~/services/login.server\";\nexport default function TambahSatuan() {\n  return <SatuanForm />;\n}\n_c = TambahSatuan;\nexport const action = async ({\n  request\n}) => {\n  await requireUserSession(request, \"ADMIN\");\n  try {\n    const formData = await request.formData();\n    const schema = createSatuanDto.safeParse(formData);\n    if (!schema.success) {\n      return typedjson({\n        message: schema.error.errors[0].message,\n        status: 400\n      }, {\n        status: 400\n      });\n    }\n    const result = await createSatuan(schema.data);\n    return typedjson(result, {\n      status: result.status\n    });\n  } catch (error) {\n    throw error;\n  }\n};\nexport const meta = () => {\n  return [{\n    title: \"Tambah satuan\"\n  }];\n};\nvar _c;\n$RefreshReg$(_c, \"TambahSatuan\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,oBAA8C;AAC9C,mBAAmC;AAE1B;AAxBT,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,8CAAgD,EAAE;AAAA,EAC3F;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAyC;AACzC,cAAY,IAAI,eAAe;AACjC;AAOe,SAAR,eAAgC;AACrC,SAAO,mDAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,SAAY;AACrB;AACA,KAAK;AAwBE,IAAM,OAAO,MAAM;AACxB,SAAO,CAAC;AAAA,IACN,OAAO;AAAA,EACT,CAAC;AACH;AACA,IAAI;AACJ,aAAa,IAAI,cAAc;AAE/B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}

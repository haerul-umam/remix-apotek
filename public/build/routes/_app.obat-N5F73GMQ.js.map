{
  "version": 3,
  "sources": ["../../../app/routes/_app.obat/index.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/_app.obat/index.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/_app.obat/index.tsx\");\n  import.meta.hot.lastModified = \"1705419340678.2332\";\n}\n// REMIX HMR END\n\nimport CustomTable from \"~/presentation/components/Table/Table\";\nimport ButtonAdd from \"~/presentation/components/Button/ButtonAdd\";\nimport ActionButtons from \"~/presentation/components/Button/ActionButtons\";\nimport InputSearch from \"~/presentation/components/Input/InputSearch\";\nimport { Outlet, useFetcher, useNavigate } from \"@remix-run/react\";\nimport { findAllObat } from \"~/services/obat.server\";\nimport { prepareSearch } from \"~/utils/_helper.server\";\nimport { typedjson, useTypedLoaderData } from \"remix-typedjson\";\nimport { Group, Table } from \"@mantine/core\";\nimport { rupiah } from \"~/utils/_helper\";\nimport { requireUserSession } from \"~/services/login.server\";\nexport const meta = () => {\n  return [{\n    title: \"Data Obat\"\n  }, {\n    content: \"Master obat\"\n  }];\n};\nexport default function ObatPage() {\n  _s();\n  const loader = useTypedLoaderData();\n  const navigate = useNavigate();\n  const fetcher = useFetcher();\n  const onUpdate = id => navigate(`/obat/${id}`);\n  const onDelete = id => fetcher.submit(null, {\n    action: `/obat/${id}`,\n    method: \"DELETE\"\n  });\n  return <>\n\t\t\t<Outlet />\n\t\t\t<main>\n\t\t\t\t<Group justify=\"space-between\">\n\t\t\t\t\t<ButtonAdd label=\"Tambah Obat\" goTo=\"tambah\" />\n\t\t\t\t\t<InputSearch mb=\"sm\" />\n\t\t\t\t</Group>\n\t\t\t\t<CustomTable totalPagination={loader?.data?.pagination.pageCount || 0} header={[\"Kode\", \"Obat\", \"Beli\", \"Jual\", \"Stok\"]} renderActionHeader>\n\t\t\t\t\t{loader?.data?.data?.map(data => <Table.Tr key={data.id}>\n\t\t\t\t\t\t\t<Table.Td>{data.code}</Table.Td>\n\t\t\t\t\t\t\t<Table.Td>{data.name}</Table.Td>\n\t\t\t\t\t\t\t<Table.Td>{rupiah(data.buyPrice)}</Table.Td>\n\t\t\t\t\t\t\t<Table.Td>{rupiah(data.sellPrice)}</Table.Td>\n\t\t\t\t\t\t\t<Table.Td>{data.stock}</Table.Td>\n\t\t\t\t\t\t\t<Table.Td>\n\t\t\t\t\t\t\t\t<ActionButtons onUpdate={() => onUpdate(data.id)} onDelete={() => onDelete(data.id)} />\n\t\t\t\t\t\t\t</Table.Td>\n\t\t\t\t\t\t</Table.Tr>)}\n\t\t\t\t</CustomTable>\n\t\t\t</main>\n\t\t</>;\n}\n_s(ObatPage, \"xeuYrHMmvJi6W+nXXw8ZVXI+64s=\", false, function () {\n  return [useTypedLoaderData, useNavigate, useFetcher];\n});\n_c = ObatPage;\nexport const loader = async ({\n  request\n}) => {\n  await requireUserSession(request, \"ADMIN\");\n  const {\n    page,\n    queryString\n  } = prepareSearch(request.url);\n  const data = await findAllObat({\n    page,\n    search: queryString\n  });\n  return typedjson(data);\n};\nvar _c;\n$RefreshReg$(_c, \"ObatPage\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
